name: tests

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "*.*"
  pull_request:
    types: [opened, reopened]

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.2"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: /opt/venv

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: /opt/venv
          key: venv-${{ runner.os }}-python-3.12.2-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies and activate virtualenv
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root

      - name: Run tests
        env:
          SECURITY__JWT_SECRET_KEY: very-not-secret
          DATABASE__HOSTNAME: localhost
          DATABASE__USER: postgres
          DATABASE__PASSWORD: postgres
          DATABASE__DB: test_db
        run: |
          poetry run pytest
